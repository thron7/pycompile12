
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '-\xb1;\x89\xf7@\xac\xb3\x95b\xd6#1\n\x99\x06'
    
_lr_action_items = {'DIVIDE':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,59,59,59,-25,-24,-23,59,59,59,-38,59,59,59,59,-28,59,59,59,59,59,59,-29,59,-39,59,59,]),'LNOT':([3,4,16,23,24,26,31,37,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'CONST':([0,1,6,7,8,11,13,17,18,19,20,41,48,60,65,72,85,86,88,95,96,98,103,107,108,109,],[5,5,-7,-6,-11,-4,-5,-10,-8,-9,-3,-15,5,-22,5,5,-21,-13,5,-42,-12,-40,-14,5,5,-41,]),'LPAREN':([3,4,16,23,24,25,26,31,37,40,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[31,31,31,31,31,44,31,31,31,66,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'LOR':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,53,53,53,-25,-24,-23,53,53,53,-38,-35,-36,-32,-31,-28,-37,-30,-26,-34,-27,-33,-29,53,-39,53,53,]),'PRINT':([0,1,6,7,8,11,13,17,18,19,20,41,48,60,65,72,85,86,88,95,96,98,103,107,108,109,],[4,4,-7,-6,-11,-4,-5,-10,-8,-9,-3,-15,4,-22,4,4,-21,-13,4,-42,-12,-40,-14,4,4,-41,]),'WHILE':([0,1,6,7,8,11,13,17,18,19,20,41,48,60,65,72,85,86,88,95,96,98,103,107,108,109,],[3,3,-7,-6,-11,-4,-5,-10,-8,-9,-3,-15,3,-22,3,3,-21,-13,3,-42,-12,-40,-14,3,3,-41,]),'EXTERN':([0,1,6,7,8,11,13,17,18,19,20,41,48,60,65,72,85,86,88,95,96,98,103,107,108,109,],[2,2,-7,-6,-11,-4,-5,-10,-8,-9,-3,-15,2,-22,2,2,-21,-13,2,-42,-12,-40,-14,2,2,-41,]),'MINUS':([3,4,16,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,87,93,94,97,102,],[24,24,24,24,24,-52,24,-43,-48,-50,-44,24,-49,-51,57,57,24,57,-25,-24,24,-23,57,24,24,24,24,24,24,24,24,24,24,24,24,24,57,57,-38,57,57,57,57,-28,57,57,-26,57,-27,57,-29,57,24,-39,24,57,57,]),'STRING':([3,4,16,23,24,26,31,37,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LE':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,54,54,54,-25,-24,-23,54,54,54,-38,None,54,None,None,-28,54,None,-26,None,-27,None,-29,54,-39,54,54,]),'RPAREN':([25,27,28,29,30,32,33,42,43,44,45,46,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,89,90,92,93,101,102,106,],[-52,-43,-48,-50,-44,-49,-51,-25,-24,-54,-23,70,-53,-54,-47,93,-46,-38,-35,-36,-32,-31,-28,-37,-30,-26,-34,-27,-33,-29,-18,99,-19,-39,-20,-45,-17,]),'SEMI':([22,25,27,28,29,30,32,33,35,42,43,45,62,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,105,],[41,-52,-43,-48,-50,-44,-49,-51,60,-25,-24,-23,85,86,-53,-38,-35,-36,-32,-31,-28,-37,-30,-26,-34,-27,-33,-29,96,-39,103,-16,]),'NE':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,58,58,58,-25,-24,-23,58,58,58,-38,None,58,None,None,-28,58,None,-26,None,-27,None,-29,58,-39,58,58,]),'LT':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,51,51,51,-25,-24,-23,51,51,51,-38,None,51,None,None,-28,51,None,-26,None,-27,None,-29,51,-39,51,51,]),'PLUS':([3,4,16,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,61,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,87,93,94,97,102,],[26,26,26,26,26,-52,26,-43,-48,-50,-44,26,-49,-51,55,55,26,55,-25,-24,26,-23,55,26,26,26,26,26,26,26,26,26,26,26,26,26,55,55,-38,55,55,55,55,-28,55,55,-26,55,-27,55,-29,55,26,-39,26,55,55,]),'INTEGER':([3,4,16,23,24,26,31,37,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'ASSIGN':([10,15,36,63,64,],[37,-52,61,87,-53,]),'$end':([0,1,6,7,8,9,11,12,13,17,18,19,20,41,60,85,86,95,96,98,103,109,],[-54,-1,-7,-6,-11,0,-4,-2,-5,-10,-8,-9,-3,-15,-22,-21,-13,-42,-12,-40,-14,-41,]),'GT':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,47,47,47,-25,-24,-23,47,47,47,-38,None,47,None,None,-28,47,None,-26,None,-27,None,-29,47,-39,47,47,]),'RBRACE':([6,7,8,11,13,17,18,19,20,41,60,72,85,86,88,95,96,98,103,108,109,],[-7,-6,-11,-4,-5,-10,-8,-9,-3,-15,-22,95,-21,-13,98,-42,-12,-40,-14,109,-41,]),'TIMES':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,52,52,52,-25,-24,-23,52,52,52,-38,52,52,52,52,-28,52,52,52,52,52,52,-29,52,-39,52,52,]),'GE':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,56,56,56,-25,-24,-23,56,56,56,-38,None,56,None,None,-28,56,None,-26,None,-27,None,-29,56,-39,56,56,]),'LAND':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,49,49,49,-25,-24,-23,49,49,49,-38,-35,-36,-32,-31,-28,49,-30,-26,-34,-27,-33,-29,49,-39,49,49,]),'FUNC':([2,],[21,]),'VAR':([0,1,6,7,8,11,13,17,18,19,20,41,48,60,65,72,85,86,88,95,96,98,103,107,108,109,],[14,14,-7,-6,-11,-4,-5,-10,-8,-9,-3,-15,14,-22,14,14,-21,-13,14,-42,-12,-40,-14,14,14,-41,]),'ELSE':([98,],[104,]),'EQ':([25,27,28,29,30,32,33,34,35,39,42,43,45,46,62,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,93,97,102,],[-52,-43,-48,-50,-44,-49,-51,50,50,50,-25,-24,-23,50,50,50,-38,None,50,None,None,-28,50,None,-26,None,-27,None,-29,50,-39,50,50,]),'ID':([0,1,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,23,24,26,31,37,38,41,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,66,72,85,86,87,88,91,94,95,96,98,99,100,103,107,108,109,],[15,15,25,25,36,-7,-6,-11,-4,-5,38,25,-10,-8,-9,-3,40,25,25,25,25,25,64,-15,25,25,15,25,25,25,25,25,25,25,25,25,25,25,-22,25,15,91,15,-21,-13,25,15,64,25,-42,-12,-40,64,91,-14,15,15,-41,]),'IF':([0,1,6,7,8,11,13,17,18,19,20,41,48,60,65,72,85,86,88,95,96,98,103,107,108,109,],[16,16,-7,-6,-11,-4,-5,-10,-8,-9,-3,-15,16,-22,16,16,-21,-13,16,-42,-12,-40,-14,16,16,-41,]),'LBRACE':([25,27,28,29,30,32,33,34,39,42,43,45,70,71,73,74,75,76,77,78,79,80,81,82,83,93,104,],[-52,-43,-48,-50,-44,-49,-51,48,65,-25,-24,-23,-38,-35,-36,-32,-31,-28,-37,-30,-26,-34,-27,-33,-29,-39,107,]),'FLOAT':([3,4,16,23,24,26,31,37,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'BOOLEAN':([3,4,16,23,24,26,31,37,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'COMMA':([25,27,28,29,30,32,33,42,43,44,45,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,89,90,92,93,101,102,106,],[-52,-43,-48,-50,-44,-49,-51,-25,-24,-54,-23,-53,-54,-47,94,-46,-38,-35,-36,-32,-31,-28,-37,-30,-26,-34,-27,-33,-29,-18,100,-19,-39,-20,-45,-17,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_prototype':([2,],[22,]),'statements':([0,48,65,107,],[1,72,88,108,]),'parameters':([66,],[90,]),'exprlist':([44,],[68,]),'const_declaration':([0,1,48,65,72,88,107,108,],[13,13,13,13,13,13,13,13,]),'literal':([3,4,16,23,24,26,31,37,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'typename':([38,91,99,],[63,101,105,]),'extern_declaration':([0,1,48,65,72,88,107,108,],[6,6,6,6,6,6,6,6,]),'while_statement':([0,1,48,65,72,88,107,108,],[8,8,8,8,8,8,8,8,]),'program':([0,],[9,]),'location':([0,1,3,4,16,23,24,26,31,37,44,47,48,49,50,51,52,53,54,55,56,57,58,59,61,65,72,87,88,94,107,108,],[10,10,27,27,27,27,27,27,27,27,27,27,10,27,27,27,27,27,27,27,27,27,27,27,27,10,10,27,10,27,10,10,]),'statement':([0,1,48,65,72,88,107,108,],[11,20,11,11,20,20,11,20,]),'parm_declaration':([66,100,],[89,106,]),'print_statement':([0,1,48,65,72,88,107,108,],[19,19,19,19,19,19,19,19,]),'var_declaration':([0,1,48,65,72,88,107,108,],[7,7,7,7,7,7,7,7,]),'if_statement':([0,1,48,65,72,88,107,108,],[17,17,17,17,17,17,17,17,]),'expression':([3,4,16,23,24,26,31,37,44,47,49,50,51,52,53,54,55,56,57,58,59,61,87,94,],[34,35,39,42,43,45,46,62,69,71,73,74,75,76,77,78,79,80,81,82,83,84,97,102,]),'assign_statement':([0,1,48,65,72,88,107,108,],[18,18,18,18,18,18,18,18,]),'empty':([0,44,66,],[12,67,92,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','exprparse.py',146),
  ('program -> empty','program',1,'p_program','exprparse.py',147),
  ('statements -> statements statement','statements',2,'p_statements','exprparse.py',153),
  ('statements -> statement','statements',1,'p_statements_1','exprparse.py',160),
  ('statement -> const_declaration','statement',1,'p_statement','exprparse.py',166),
  ('statement -> var_declaration','statement',1,'p_statement','exprparse.py',167),
  ('statement -> extern_declaration','statement',1,'p_statement','exprparse.py',168),
  ('statement -> assign_statement','statement',1,'p_statement','exprparse.py',169),
  ('statement -> print_statement','statement',1,'p_statement','exprparse.py',170),
  ('statement -> if_statement','statement',1,'p_statement','exprparse.py',171),
  ('statement -> while_statement','statement',1,'p_statement','exprparse.py',172),
  ('const_declaration -> CONST ID ASSIGN expression SEMI','const_declaration',5,'p_const_declaration','exprparse.py',178),
  ('var_declaration -> VAR ID typename SEMI','var_declaration',4,'p_var_declaration','exprparse.py',184),
  ('var_declaration -> VAR ID typename ASSIGN expression SEMI','var_declaration',6,'p_var_declaration_1','exprparse.py',190),
  ('extern_declaration -> EXTERN func_prototype SEMI','extern_declaration',3,'p_extern_declaration','exprparse.py',196),
  ('func_prototype -> FUNC ID LPAREN parameters RPAREN typename','func_prototype',6,'p_func_prototype','exprparse.py',202),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','exprparse.py',208),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','exprparse.py',215),
  ('parameters -> empty','parameters',1,'p_parameters_1','exprparse.py',216),
  ('parm_declaration -> ID typename','parm_declaration',2,'p_parm_declaration','exprparse.py',222),
  ('assign_statement -> location ASSIGN expression SEMI','assign_statement',4,'p_assign_statement','exprparse.py',228),
  ('print_statement -> PRINT expression SEMI','print_statement',3,'p_print_statement','exprparse.py',234),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','exprparse.py',242),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','exprparse.py',243),
  ('expression -> LNOT expression','expression',2,'p_expression_unary','exprparse.py',244),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','exprparse.py',250),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','exprparse.py',251),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary','exprparse.py',252),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','exprparse.py',253),
  ('expression -> expression LE expression','expression',3,'p_expression_relation','exprparse.py',260),
  ('expression -> expression LT expression','expression',3,'p_expression_relation','exprparse.py',261),
  ('expression -> expression EQ expression','expression',3,'p_expression_relation','exprparse.py',262),
  ('expression -> expression NE expression','expression',3,'p_expression_relation','exprparse.py',263),
  ('expression -> expression GE expression','expression',3,'p_expression_relation','exprparse.py',264),
  ('expression -> expression GT expression','expression',3,'p_expression_relation','exprparse.py',265),
  ('expression -> expression LAND expression','expression',3,'p_expression_relation','exprparse.py',266),
  ('expression -> expression LOR expression','expression',3,'p_expression_relation','exprparse.py',267),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','exprparse.py',273),
  ('expression -> ID LPAREN exprlist RPAREN','expression',4,'p_expression_funcall','exprparse.py',279),
  ('if_statement -> IF expression LBRACE statements RBRACE','if_statement',5,'p_if_statement','exprparse.py',285),
  ('if_statement -> IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',9,'p_if_else_statement','exprparse.py',291),
  ('while_statement -> WHILE expression LBRACE statements RBRACE','while_statement',5,'p_while_statement','exprparse.py',297),
  ('expression -> location','expression',1,'p_expression_location','exprparse.py',303),
  ('expression -> literal','expression',1,'p_expression_literal','exprparse.py',309),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','exprparse.py',315),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','exprparse.py',322),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','exprparse.py',323),
  ('literal -> INTEGER','literal',1,'p_literal','exprparse.py',329),
  ('literal -> FLOAT','literal',1,'p_literal','exprparse.py',330),
  ('literal -> STRING','literal',1,'p_literal','exprparse.py',331),
  ('literal -> BOOLEAN','literal',1,'p_literal','exprparse.py',332),
  ('location -> ID','location',1,'p_location','exprparse.py',338),
  ('typename -> ID','typename',1,'p_typename','exprparse.py',344),
  ('empty -> <empty>','empty',0,'p_empty','exprparse.py',350),
]
